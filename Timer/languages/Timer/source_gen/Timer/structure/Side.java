package Timer.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Side {
  LEFT("LEFT", "LEFT"),
  RIGHT("RIGHT", "RIGHT"),
  TOP("TOP", "TOP"),
  BOTTOM("BOTTOM", "BOTTOM"),
  FRONT("FRONT", "FRONT"),
  BACK("BACK", "BACK");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<Side> getConstants() {
    List<Side> list = ListSequence.fromList(new LinkedList<Side>());
    ListSequence.fromList(list).addElement(Side.LEFT);
    ListSequence.fromList(list).addElement(Side.RIGHT);
    ListSequence.fromList(list).addElement(Side.TOP);
    ListSequence.fromList(list).addElement(Side.BOTTOM);
    ListSequence.fromList(list).addElement(Side.FRONT);
    ListSequence.fromList(list).addElement(Side.BACK);
    return list;
  }

  public static Side getDefault() {
    return Side.FRONT;
  }

  public static Side parseValue(String value) {
    if (value == null) {
      return Side.getDefault();
    }
    if (value.equals(Side.LEFT.getValueAsString())) {
      return Side.LEFT;
    }
    if (value.equals(Side.RIGHT.getValueAsString())) {
      return Side.RIGHT;
    }
    if (value.equals(Side.TOP.getValueAsString())) {
      return Side.TOP;
    }
    if (value.equals(Side.BOTTOM.getValueAsString())) {
      return Side.BOTTOM;
    }
    if (value.equals(Side.FRONT.getValueAsString())) {
      return Side.FRONT;
    }
    if (value.equals(Side.BACK.getValueAsString())) {
      return Side.BACK;
    }
    return Side.getDefault();
  }

  private String myValue;

  Side(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
