package Timer.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Signal {
  monotone("monotone", "monotone"),
  melody("melody", "melody");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<Signal> getConstants() {
    List<Signal> list = ListSequence.fromList(new LinkedList<Signal>());
    ListSequence.fromList(list).addElement(Signal.monotone);
    ListSequence.fromList(list).addElement(Signal.melody);
    return list;
  }

  public static Signal getDefault() {
    return Signal.monotone;
  }

  public static Signal parseValue(String value) {
    if (value == null) {
      return Signal.getDefault();
    }
    if (value.equals(Signal.monotone.getValueAsString())) {
      return Signal.monotone;
    }
    if (value.equals(Signal.melody.getValueAsString())) {
      return Signal.melody;
    }
    return Signal.getDefault();
  }

  private String myValue;

  Signal(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
