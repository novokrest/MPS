package Timer.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum SourceType {
  clockwork("clockwork", "clockwork"),
  battery("battery", "battery"),
  nuclear("nuclear", "nuclear");

  private String myName;

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public static List<SourceType> getConstants() {
    List<SourceType> list = ListSequence.fromList(new LinkedList<SourceType>());
    ListSequence.fromList(list).addElement(SourceType.clockwork);
    ListSequence.fromList(list).addElement(SourceType.battery);
    ListSequence.fromList(list).addElement(SourceType.nuclear);
    return list;
  }

  public static SourceType getDefault() {
    return SourceType.battery;
  }

  public static SourceType parseValue(String value) {
    if (value == null) {
      return SourceType.getDefault();
    }
    if (value.equals(SourceType.clockwork.getValueAsString())) {
      return SourceType.clockwork;
    }
    if (value.equals(SourceType.battery.getValueAsString())) {
      return SourceType.battery;
    }
    if (value.equals(SourceType.nuclear.getValueAsString())) {
      return SourceType.nuclear;
    }
    return SourceType.getDefault();
  }

  private String myValue;

  SourceType(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getValue() {
    return this.myValue;
  }
}
